FROM ubuntu:18.04 as php72

ARG DEBIAN_FRONTEND=noninteractive

ARG WWWGROUP

# Set a default conf for apt-get install
RUN echo 'apt::install-recommends "false";' > /etc/apt/apt.conf.d/no-install-recommends

# Upgrade system
RUN apt-get update -qq -y && \
    apt-get upgrade -qq -y

# Install a few required packages
RUN apt-get install -qq -y \
    ca-certificates \
    supervisor \
    # Calling fpm locally
    libfcgi-bin \
    # Manipulate iptables rules (example: block smtps)
    iptables \
    php7.2-bcmath \
    php7.2-bz2 \
    # php7.2-cgi \
    php7.2-cli \
    php7.2-curl \
    # php7.2-dba \
    # php7.2-dev \
    # php7.2-enchant \
    php7.2-fpm \
    php7.2-gd \
    # php7.2-gmp \
    php7.2-imap \
    # php7.2-interbase \
    php7.2-intl \
    php7.2-json \
    php7.2-ldap \
    php7.2-mbstring \
    php7.2-mysql \
    # php7.2-odbc \
    php7.2-opcache \
    php7.2-pgsql \
    # php7.2-phpdbg \
    # php7.2-pspell \
    php7.2-readline \
    # php7.2-recode \
    # php7.2-snmp \
    php7.2-soap \
    php7.2-sqlite3 \
    # php7.2-sybase \
    # php7.2-tidy \
    php7.2-xml \
    php7.2-xmlrpc \
    # php7.2-xsl
    php7.2-zip \
    php-apcu \
    php-geoip \
    php-imagick \
    php-memcache \
    php-memcached \
    php-ssh2 \
    php-tideways

# Set a symlink to simplify the configuration, as we use a single php version
RUN ln -s /etc/php/7.2 /etc/php/current && \
    # Log to stdout
    sed -i 's/^error_log.*/error_log = \/proc\/self\/fd\/2/g' /etc/php/current/fpm/php-fpm.conf && \
    echo 'access.log = /proc/self/fd/2' >> /etc/php/current/fpm/php-fpm.conf && \
    # Create log dir
    mkdir /var/log/php && \
    # Install a few extensions with PECL instead of distro ones
    apt-get install -qq -y \
    build-essential \
    php-pear php7.2-dev pkg-config zlib1g-dev && \
    pecl channel-update pecl.php.net && \
    pecl -q install mongodb redis xdebug-3.1.6 xhprof && \
    # Activate it
    echo "extension=mongodb.so" > /etc/php/current/mods-available/mongodb.ini && \
    echo "extension=redis.so" > /etc/php/current/mods-available/redis.ini && \
    echo "zend_extension=xdebug.so" > /etc/php/current/mods-available/xdebug.ini && \
    echo "extension=xhprof.so" > /etc/php/current/mods-available/xhprof.ini && \
    phpenmod mongodb redis xdebug xhprof && \
    # Clean
    apt-get purge -qq --autoremove -y \
    build-essential \
    php-pear php7.2-dev pkg-config zlib1g-dev && \
    apt-get autoremove -qq -y && \
    apt-get autoclean -qq && \
    apt-get clean -qq && \
    # Empty some directories from all files and hidden files
    rm -rf /build /tmp/* /usr/share/php/docs /usr/share/php/tests && \
    find /root /var/lib/apt/lists /usr/share/man /usr/share/doc /var/cache /var/log -type f -delete

# Copy custom php files
COPY ./common/php.dev.ini /etc/php/current/cli/conf.d/30-custom-php.ini
COPY ./common/php-fpm.ini /etc/php/current/fpm/conf.d/30-custom-php.ini
COPY ./common/www.conf /etc/php/current/fpm/pool.d/

# For custom Configuration that comes from outside (via a docker compose mount)
RUN mkdir /etc/php/current/fpm/user-conf.d && \
    echo "; Default empty file" > /etc/php/current/fpm/user-conf.d/example.conf && \
    # Create home for www-data
    mkdir /home/www-data && \
    chown www-data:www-data /home/www-data && \
    usermod -d /home/www-data www-data && \
    mkdir -p /run/php && \
    chown www-data:www-data /run/php

# Prepere entrypoint
COPY ./scripts/docker-entrypoint.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

# Get latest Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Create system user to run Composer and Artisan Commands
RUN useradd -G www-data -u $WWWGROUP -d /home/sail sail
RUN mkdir -p /home/sail/.composer && \
    chown -R sail:sail /home/sail

# Set working directory
WORKDIR /var/www

EXPOSE 9000

ENTRYPOINT  ["/docker-entrypoint.sh"]
